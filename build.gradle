buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'netisov.timofei.customersapp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_1_10

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
//	compile('org.springframework.boot:spring-boot-starter-data-jpa')

	compile('org.liquibase:liquibase-core')
	compile('org.xerial:sqlite-jdbc')
	/* Hibernate packages */
//	compile "org.hibernate:hibernate-core:${org_hibernate_version}"
//	compile "org.hibernate:hibernate-entitymanager:${org_hibernate_version}"

	/* Commons packages */
	compile "org.apache.commons:commons-lang3:${commons_lang_version}"

	/* Swagger packages */
	compile "io.springfox:springfox-swagger2:${io_springfox_swagger_version}"
	compile "io.springfox:springfox-swagger-ui:${io_springfox_swagger_version}"
	/* Lombok */
	compileOnly('org.projectlombok:lombok')
	/* Test packages */
	testCompile "org.springframework.boot:spring-boot-starter-test"
	testCompile "org.springframework.security:spring-security-test"
	testCompile "junit:junit:${junit_version}"
	testCompile "com.h2database:h2:${h2database_version}"
	testCompile "org.mockito:mockito-core:${mockito_version}"
	testCompile "org.dbunit:dbunit:${dbunit_version}"
	testCompile "com.github.springtestdbunit:spring-test-dbunit:${spring_test_dbunit_version}"
}

def webappDir = "$projectDir/src/main/webapp"
sourceSets {
	main {
		resources {
			srcDirs = ["$webappDir/dist", "$projectDir/src/main/resources"]
		}
	}
}

processResources {
	dependsOn "buildAngular"
}

task buildAngular(type:Exec) {
	// installAngular should be run prior to this task
	dependsOn "installAngular"
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	// Add task to the standard build group
	group = BasePlugin.BUILD_GROUP
	// ng doesn't exist as a file in windows -> ng.cmd
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build"
	} else {
		commandLine "ng", "build"
	}
}

task installAngular(type:Exec) {
	workingDir "$webappDir"
	inputs.dir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "npm.cmd", "install"
	} else {
		commandLine "npm", "install"
	}
}